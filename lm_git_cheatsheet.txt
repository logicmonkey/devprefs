Logicmonkey Git Cheat Sheet
===========================

Files are [modified] | [staged] | [committed]

Getting Started
---------------

mkdir myproj
cd myproj
git init
git config --global user.name "Your Name"
git config --global user.email "your.name@dotcom.com
git config --list

Working
-------

git add myfile # stages myfile
git commit -m 'meaningful message' # commits myfile
git log # lists changes
git log --follow myfile # lists changes on myfile
git commit -am 'meaningful message' # stage and commit modified files in one go
git commit --amend # opens the last commit and adds current changes to it

Undoing
-------

git reset HEAD myfile # unstages myfile
git checkout -- myfile # overwrites the working copy of myfile
git reset --hard # similar to above? i'll have to check and update this

Remotes
-------

git remote -v # details the source of the cloned repo
git push origin master # sends the local 'master' branch to the remote origin
git pull origin master # will attempt to merge with local commits
git fetch origin # will fetch the remote changes [e.g. on branches] but not merge them
git diff origin/master # show differences. A space works but / invokes 'less'

Branching
---------

        C1 <- C2 <- C3 <- C4
                    ^     ^
                    |     |
                    |     +- (C1 'testing')
                    +- HEAD ('master')

git branch # lists branches
git branch testing # creates the 'testing' branch
git checkout testing # switches to the 'testing' branch
git checkout -b testing master # combines those last 2 commands

Fast Forward Merge
------------------

Given:
C1 <- C2 <- C3 <- C4
            ^     ^
            |     |
            |     +- (C1 'testing')
            +- HEAD ('master')

git checkout master
git merge testing

Results in the HEAD of 'master' advancing:
        C1 <- C2 <- C3 <- C4
                          ^
                          |
                          |- (C1 'testing')
                          +- HEAD ('master')



